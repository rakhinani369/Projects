Name: P. Rakesh
Course: Dev0ps
Trainer: Mr. Madhukar
Email: rakeshpeddapally369@gmail.com
Batch No: 105 Timings : 12pm batch

P2: Secure a CI/CD pipeline. Main objective will be how to implement security measures in a
CI/CD pipeline ?
Automated pipeline code for Ekart

Pipeline Syntax:
pipeline {
 agent any
 tools{
 jdk 'jdk11'
 maven 'maven3'
 }

 environment{

 SCANNER_HOME=tool 'Sonar-Scanner'
 }
 stages {
 stage('Git checkout') {
 steps {
 checkout scmGit(branches: [[name: '*/main']], extensions: [], userRemoteConfigs: [[url:
'https://github.com/rakhinani369/Ekart.git']])
 }
 }

 stage('Compile') {
 steps {
 sh "mvn compile"
 }
 }

 stage('OWASP FS Scan') {
 steps {
 dependencyCheck additionalArguments: '--scan ./', odcInstallation: 'DC'
 dependencyCheckPublisher pattern: '**/dependency-check-report.xml'
 }
 }

 stage('Sonarqube Analysis') {
 steps {
 withSonarQubeEnv('sonar'){
 sh''' mvn clean -DskipTests=true \
 -Dsonar.projectKey=ekart \
 -Dsonar.projectName='ekart' \
 -Dsonar.host.url=http://3.110.229.149:5000 \
 -Dsonar.token=sqp_3ba4d555e2108dcb8ee7430c433762793c745b19
 '''
 }
 }
 }

 stage('Build') {
 steps {
 sh "mvn package -DskipTests=true"
 }
 }

 stage('nexus'){
 steps{
 nexusArtifactUploader artifacts: [[artifactId: 'shopping-cart', classifier: '', file:
'/var/lib/jenkins/workspace/ui/target/shopping-cart-0.0.1-SNAPSHOT.jar', type: 'jar']], credentialsId:
'nexus', groupId: 'com.reljicd', nexusUrl: '3.110.205.221:8081', nexusVersion: 'nexus3', protocol: 'http',
repository: 'maven-snapshots', version: '0.0.1-SNAPSHOT'
 }
 }

 stage('Build & Tag Docker Image') {
 steps {
 script{
 withDockerRegistry(credentialsId: 'docker-cred', toolName: 'docker') {
 sh " docker build -t shopping-cart:dev -f docker/Dockerfile ."
 sh " docker tag shopping-cart:dev rakhi369/shopping-cart:dev"
 }
 }
 }
 }

 stage('Push Docker Image') {
 steps {
 script{
 withDockerRegistry(credentialsId: 'docker-cred', toolName: 'docker') {
 sh " docker push rakhi369/shopping-cart:dev"
 }

}

}

}


}
}

